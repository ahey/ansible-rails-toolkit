Vagrant.configure("2") do |config|
  config.vm.box = "geerlingguy/ubuntu1604"
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.ssh.insert_key = false

  config.vm.provider :virtualbox do |v|
    v.memory = 512
    v.cpus = 1
    v.linked_clone = true
    v.customize ["modifyvm", :id, "--cableconnected1", "on"]
  end

  # Define four VMs with static private IP addresses.
  boxes = [
      {name: "all", ip: "192.168.3.2"},
      {name: "jenkins", ip: "192.168.3.20"}
      {name: "nginx", ip: "192.168.3.2"},
      {name: "www1", ip: "192.168.3.3"},
      {name: "db", ip: "192.168.3.10"}
  ]

  # Provision each of the VMs.
  boxes.each.with_index do |opts, index|
    config.vm.define opts[:name] do |config|
      config.vm.hostname = "#{opts[:name]}.test"
      config.vm.network :private_network, ip: opts[:ip]

      # if opts[:name] == 'nginx'
      #   config.vm.network :forwarded_port, guest: 80, host: 8080
      # end

      # Provision all the VMs using Ansible after last VM is up.
      if index == boxes.size - 1
        config.vm.provision "ansible" do |ansible|
          ansible.raw_arguments = ['--timeout=100']
          ansible.playbook = "../../configure.yml"
          ansible.inventory_path = "./hosts"
          ansible.limit = "all"
          ansible.vault_password_file = "~/vault_password.txt"
          # ansible.become = true
          ansible.extra_vars = {
              ansible_ssh_user: 'vagrant',
              ansible_ssh_private_key_file: "~/.vagrant.d/insecure_private_key"
          }
        end
      end
    end
  end
end
